<?php

namespace Instaphp\Utils\Http;

/**
 * Generated by PHPUnit_SkeletonGenerator 1.2.0 on 2013-01-18 at 18:06:28.
 * @ignore
 */
class RequestTest extends \PHPUnit_Framework_TestCase
{

	/**
	 * @var Http
	 */
	protected $object;
	
	/**
	 * Sets up the fixture, for example, opens a network connection.
	 * This method is called before a test is executed.
	 */
	protected function setUp()
	{
		$this->object = new Http("http://httptest.instaphp.com");
	}

	/**
	 * Tears down the fixture, for example, closes a network connection.
	 * This method is called after a test is executed.
	 */
	protected function tearDown()
	{
		
	}

	/**
	 * @covers Instaphp\Utils\Http\Http::Get
	 * @todo   Implement testGet().
	 */
	public function testGet()
	{
		// Remove the following lines when you implement this test.
		$res = $this->object->Get('/test/get', ['param1' => 'value1', 'param2' => 'value2']);
		$this->assertEquals(200, $res->code);
		$data = json_decode($res->body, true);
		$this->assertEquals('GET', $data['request_method']);
		$this->assertEquals('value1', $data['request_get_parameters']['param1']);
		$this->assertArrayHasKey('param2', $data['request_get_parameters']);
	}

	/**
	 * @covers Instaphp\Utils\Http\Http::Post
	 * @todo   Implement testPost().
	 */
	public function testPost()
	{
		// Remove the following lines when you implement this test.
		$res = $this->object->Post('/test/post', ['foo' => 'bar', 'baz' => 'nutz']);
		$this->assertEquals(200, $res->code);
		$data = json_decode($res->body, true);
		$this->assertEquals('POST', $data['request_method']);
		$this->assertEquals('bar', $data['request_post_parameters']['foo']);
		$this->assertArrayHasKey('baz', $data['request_post_parameters']);
	}

	/**
	 * @covers Instaphp\Utils\Http\Http::Put
	 * @todo   Implement testPut().
	 */
	public function testPut()
	{
		$res = $this->object->Put('/test/put/beer.png', ['file' => TEST_ROOT . '/beer.png', 'filename' => 'beer.png']);
		$this->assertEquals(200, $res->code);
		$data = json_decode($res->body, TRUE);
		$this->assertEquals('PUT', $data['request_method']);
	}

	/**
	 * @covers Instaphp\Utils\Http\Http::Delete
	 * @todo   Implement testDelete().
	 */
	public function testDelete()
	{
		$res = $this->object->Delete('/test/delete/beer.png');
		$this->assertEquals(200, $res->code);
		$data = json_decode($res->body, TRUE);
		$this->assertEquals('DELETE', $data['request_method']);
	}

	/**
	 * @covers Instaphp\Utils\Http\Http::Head
	 * @todo   Implement testHead().
	 */
	public function testHead()
	{
		$res = $this->object->Head('/test/head');
		$this->assertEmpty($res->body);
		$this->assertEquals('HEAD', $res->headers['HTTPTEST_METHOD']);
	}
}
